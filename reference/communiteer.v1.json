{
  "openapi": "3.0.0",
  "info": {
    "title": "communiteer",
    "version": "1.0",
    "description": "API Specification for third party integration"
  },
  "servers": [
    {
      "description": "",
      "url": "https://staging.communiteer.org"
    }
  ],
  "paths": {
    "/api/communities/": {
      "get": {
        "summary": "Get community list",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/communities/Community.v1.json"
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/communities/Community.v1.json"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Retrieve all communities",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "Filter communties that matches the specified title"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter communities that vision mission contains the text specified"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "welcome_message",
            "description": "Filter communities that welcome messages contains the text specified"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_invite_only",
            "description": "Filter private or open communities"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter communities that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/communities/{community_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community details",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/communities/Community.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-api-communities-community_id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {},
        "description": "Retrieve specific community details"
      }
    },
    "/api/projects/": {
      "get": {
        "summary": "Get project list",
        "tags": [
          "Project",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 129,
                        "created_time": "2019-09-09T11:51:11.959200+10:00",
                        "modified_time": "2019-09-12T11:22:49.124735+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "project-title",
                        "title": "Project Title",
                        "description": "<p>This Project aims to... test</p>",
                        "date_start": "2019-09-09T11:45:41.599000+10:00",
                        "date_end": "2019-09-09T11:45:41.599000+10:00"
                      },
                      {
                        "id": 130,
                        "created_time": "2019-09-20T19:47:20.588069+10:00",
                        "modified_time": "2019-09-23T18:18:50.114086+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "test-rest-tr",
                        "title": "test rest tr",
                        "description": "<p>test test</p>",
                        "date_start": "2019-09-20T19:44:54.525000+10:00",
                        "date_end": "2019-09-20T19:44:54.525000+10:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-projects",
        "description": "Retrieve all available projects",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_start",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_end",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter results by completed or not completed projects"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter projects that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      },
      "parameters": []
    },
    "/api/projects/{project_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get project details",
        "tags": [
          "Project",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": 155,
                      "accounts": [],
                      "communities": [
                        {
                          "id": 84,
                          "created_time": "2019-09-24T12:07:57.017527+10:00",
                          "modified_time": "2019-10-04T17:01:44.538607+10:00",
                          "is_active": true,
                          "title": "New Community",
                          "logo": "https://comblob02.blob.core.windows.net/media-communiteer-com/background_2_3vVpZcR.PNG",
                          "website_url": "",
                          "is_invite_only": false,
                          "description": "<p>To test is to pass</p>",
                          "intro_message": "",
                          "welcome_message": "<p>Welcome message</p>"
                        }
                      ],
                      "created_time": "2020-03-17T23:04:31.757123+11:00",
                      "modified_time": "2020-03-17T23:04:31.757156+11:00",
                      "is_active": true,
                      "welcome_message": "<p>Welcome to this project!</p>",
                      "slug": "superuser-create-project",
                      "title": "Superuser create project",
                      "description": "<p>This overview is over</p>",
                      "date_start": "2020-03-17T22:52:35.784000+11:00",
                      "date_end": "2020-03-17T22:52:35.784000+11:00",
                      "date_closed": null,
                      "is_recurring": false,
                      "is_draft": false,
                      "is_closed": false,
                      "created_by": 334,
                      "modified_by": 334,
                      "agreement": 1,
                      "goals": [],
                      "organisations": [],
                      "programs": [
                        101
                      ],
                      "tasks": [
                        {
                          "id": 334,
                          "created_time": "2020-03-17T23:04:32.240937+11:00",
                          "modified_time": "2020-03-19T14:35:55.299430+11:00",
                          "is_active": true,
                          "title": "Start project",
                          "description": "<p>This should be the first face-to-face or phone catchup between admins and volunteers. At the end of the catchup, everyone should agree to a list of tasks to be completed. Create these tasks in this project to track your progress.</p>",
                          "created_by_id": null,
                          "modified_by_id": null,
                          "is_closed": false,
                          "order": 3,
                          "is_discontinued": false
                        },
                        {
                          "id": 335,
                          "created_time": "2020-03-17T23:04:32.252850+11:00",
                          "modified_time": "2020-03-17T23:04:32.252882+11:00",
                          "is_active": true,
                          "title": "Read background info",
                          "description": "<p>Admins should upload information here for volunteers to read. Volunteers should read the information posted to prepare themselves for the project before it starts.</p>",
                          "created_by_id": null,
                          "modified_by_id": null,
                          "is_closed": false,
                          "order": 1,
                          "is_discontinued": false
                        },
                        {
                          "id": 336,
                          "created_time": "2020-03-17T23:04:32.541679+11:00",
                          "modified_time": "2020-03-19T14:35:55.295826+11:00",
                          "is_active": true,
                          "title": "Sample task",
                          "description": "<p>This is a sample task. Create more if the project requires it. Volunteers should upload files to this task to be reviewed. Once the admin is happy with the task, the admin should mark the task as completed.</p>",
                          "created_by_id": null,
                          "modified_by_id": null,
                          "is_closed": false,
                          "order": 2,
                          "is_discontinued": false
                        },
                        {
                          "id": 337,
                          "created_time": "2020-03-17T23:04:32.560559+11:00",
                          "modified_time": "2020-03-17T23:04:32.560593+11:00",
                          "is_active": true,
                          "title": "Debrief session",
                          "description": "<p>Once your tasks are completed, this should be a face-to-face or phone catchup to review the work completed. This is also a good opportunity for the admins to thank and recognise the contributions of the volunteers.</p>",
                          "created_by_id": null,
                          "modified_by_id": null,
                          "is_closed": false,
                          "order": 4,
                          "is_discontinued": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-api-projects-project_id",
        "description": "Retrieve specific project details",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/communities/{community_id}/projects": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community projects",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 129,
                        "created_time": "2019-09-09T11:51:11.959200+10:00",
                        "modified_time": "2019-09-12T11:22:49.124735+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "project-title",
                        "title": "Project Title",
                        "description": "<p>This Project aims to... test</p>",
                        "date_start": "2019-09-09T11:45:41.599000+10:00",
                        "date_end": "2019-09-09T11:45:41.599000+10:00"
                      },
                      {
                        "id": 130,
                        "created_time": "2019-09-20T19:47:20.588069+10:00",
                        "modified_time": "2019-09-23T18:18:50.114086+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "test-rest-tr",
                        "title": "test rest tr",
                        "description": "<p>test test</p>",
                        "date_start": "2019-09-20T19:44:54.525000+10:00",
                        "date_end": "2019-09-20T19:44:54.525000+10:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-community_d-projects",
        "description": "Retrieve all projects within the specified community",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_start",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_end",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter results by completed or not completed projects"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter projects within the community that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get users list",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-04-06T18:26:28.741519+10:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": [],
                        "task_updatedate": "2020-04-09T01:05:07.416194Z"
                      },
                      {
                        "id": 334,
                        "first_name": "Admin",
                        "last_name": "Justine",
                        "date_joined": "2019-09-26T15:56:58+10:00",
                        "email": "adminjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Annotation_2020-02-26_132125.png",
                        "preferred_name": "Admin Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-04-03T11:22:17+11:00",
                        "is_onboarded": true,
                        "attributes": [
                          67
                        ],
                        "goals": [
                          1,
                          3,
                          2
                        ],
                        "task_updatedate": "2020-04-09T01:05:07.416194Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-users",
        "description": "Retrieve all users.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users base on matching name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "task_updatedate",
            "description": "Filter the users with the last task update"
          }
        ]
      }
    },
    "/api/users/{user_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user profile",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": 334,
                      "is_superuser": true,
                      "first_name": "Admin",
                      "last_name": "Justine",
                      "is_staff": true,
                      "is_active": true,
                      "date_joined": "2019-09-26T15:56:58+10:00",
                      "email": "adminjustine@gmail.com",
                      "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Annotation_2020-02-26_132125.png",
                      "username": null,
                      "preferred_name": "Admin Justine",
                      "secondary_email": null,
                      "mobile": null,
                      "linkedin": "",
                      "region_nation": null,
                      "region_nation_subdivision": null,
                      "area_code": null,
                      "last_login": "2020-04-03T11:22:17.251381+11:00",
                      "vol_availability": null,
                      "vol_prefer_regular": null,
                      "vol_prefer_episodic": null,
                      "current_step": "2",
                      "is_project_onboarded": false,
                      "is_org_onboarded": false,
                      "is_onboarded": true,
                      "term_acceptance_date": "2019-09-26T15:56:59.018846+10:00",
                      "is_org_admin": false,
                      "is_new_to_community": false,
                      "groups": [],
                      "user_permissions": [],
                      "attributes": [
                        67
                      ],
                      "goals": [
                        1,
                        3,
                        2
                      ],
                      "private_message_received": 0,
                      "private_message_sent": 0,
                      "updated_profile_details": 0,
                      "updated_profile_portrait": 0,
                      "updated_profile_skills": 0,
                      "updated_profile_goals": 0,
                      "stories_viewed": 0,
                      "announcements_viewed": 0,
                      "discussion_viewed": 0,
                      "events_viewed": 0,
                      "projects_viewed": 0,
                      "programs_viewed": 0,
                      "communities_visited": 0,
                      "communities_joined": 0,
                      "discussion_threads_started": 0,
                      "comments_posted_in_threads": 0,
                      "events_registered": 0,
                      "resources_added": 0,
                      "project_joined": 0,
                      "open_project_joined": 0,
                      "completed_project_joined": 0,
                      "comments_added_in_project": 0,
                      "project_tasks_created": 0,
                      "project_active_tasks_joined": 0,
                      "project_completed_tasks_joined": 0,
                      "project_files_uploaded": 0,
                      "feedback_provied": 0,
                      "projects": [
                        {
                          "id": 131,
                          "is_active": true,
                          "welcome_message": "Welcome to this project!",
                          "slug": "new-project",
                          "title": "New Project",
                          "description": "<p>New Project</p>",
                          "date_start": "2019-09-26T17:59:13.196000+10:00",
                          "date_end": "2019-09-26T17:59:13.196000+10:00",
                          "tasks": []
                        },
                        {
                          "id": 132,
                          "is_active": true,
                          "welcome_message": "Welcome to this project!",
                          "slug": "first-project",
                          "title": "first project",
                          "description": "<p>first project version 2</p>",
                          "date_start": "2019-09-26T18:19:21.643000+10:00",
                          "date_end": "2019-09-26T18:19:21.643000+10:00",
                          "tasks": [
                            {
                              "id": 131,
                              "created_time": "2020-04-08T19:29:27.956744+10:00",
                              "modified_time": "2020-04-08T19:30:19.853119+10:00",
                              "is_active": true,
                              "opportunity_id": 287,
                              "time_spent": 5
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-users-user_id",
        "description": "Retrieve the information for specific user",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/communities/{community_id}/users": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community members",
        "tags": [
          "Community"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": [
                          1,
                          2,
                          3
                        ]
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-community_id-users",
        "description": "Retrieve all the users inside the community.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users by the specified name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "role",
            "description": "Filter the users by role e.g Admin or Supporter"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "datejoined",
                "lastlogin"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/projects/{project_id}/users": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get project members",
        "tags": [
          "Project",
          "Users",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": []
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-projects-project_id-users",
        "description": "Retrieve the members of the project.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users base on matching name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/projects/{project_id}/tasks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get project tasks",
        "tags": [
          "Project",
          "Tasks",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/communities/Tasks.v1.json"
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-api-projects-project_id-tasks",
        "description": "Retrieve list of tasks in the project.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter completed/active tasks."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_discontinued",
            "description": "Filter hidden/visible tasks."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "Filter the tasks base on title."
          }
        ]
      }
    },
    "/api/user/{user_id}/tasks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user tasks",
        "tags": [
          "Users",
          "Tasks",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "$ref": "../models/communities/Tasks.v1.json"
                    },
                    "hours_worked": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "opportunity_id": 294,
                        "title": "Notification Update",
                        "description": "<p>Notification Update</p>",
                        "is_closed": false,
                        "is_discontinued": false,
                        "updated_time": "2019-11-07T23:27:17.038661Z",
                        "created_time": "2019-11-07T23:27:17.038621Z",
                        "hours_worked": 0,
                        "skills": []
                      },
                      {
                        "opportunity_id": 287,
                        "title": "Briefing and Scoping",
                        "description": "",
                        "is_closed": false,
                        "is_discontinued": false,
                        "updated_time": "2020-04-14T10:18:37.029820Z",
                        "created_time": "2019-09-26T08:19:37.470455Z",
                        "hours_worked": 5,
                        "skills": [
                          "Basic Admin",
                          "Data & Analytics"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-user-user_id-tasks",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/api-auth-token/": {
      "post": {
        "summary": "Retrieve Auth Token",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "token": "9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-auth-token",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "this field will be the email of the user"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example": {}
              }
            }
          },
          "description": "Provide post data with email and password"
        }
      },
      "parameters": []
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "Use api token that will be generated"
      }
    },
    "schemas": {}
  }
}