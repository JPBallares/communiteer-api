{
  "openapi": "3.0.0",
  "info": {
    "title": "communiteer",
    "version": "1.0",
    "description": "API Specification for third party integration"
  },
  "servers": [
    {
      "description": "For testing",
      "url": "https://staging.communiteer.org"
    }
  ],
  "paths": {
    "/api/communities/": {
      "get": {
        "summary": "Get community list",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/communities/CommunityList.v1.json"
                  }
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/communities/CommunityList.v1.json"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Retrieve all communities",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "Filter communties that matches the specified title"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter communities that vision mission contains the text specified"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "welcome_message",
            "description": "Filter communities that welcome messages contains the text specified"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_invite_only",
            "description": "Filter private or open communities"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter communities that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/communities/{community_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community details",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/communities/Community.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-api-communities-community_id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {},
        "description": "Retrieve specific community details"
      }
    },
    "/api/projects/": {
      "get": {
        "summary": "Get opportunities list",
        "tags": [
          "Project",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/projects/ProjectList.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 129,
                        "created_time": "2019-09-09T11:51:11.959200+10:00",
                        "modified_time": "2019-09-12T11:22:49.124735+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "project-title",
                        "title": "Project Title",
                        "description": "<p>This Project aims to... test</p>",
                        "date_start": "2019-09-09T11:45:41.599000+10:00",
                        "date_end": "2019-09-09T11:45:41.599000+10:00"
                      },
                      {
                        "id": 130,
                        "created_time": "2019-09-20T19:47:20.588069+10:00",
                        "modified_time": "2019-09-23T18:18:50.114086+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "test-rest-tr",
                        "title": "test rest tr",
                        "description": "<p>test test</p>",
                        "date_start": "2019-09-20T19:44:54.525000+10:00",
                        "date_end": "2019-09-20T19:44:54.525000+10:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-projects",
        "description": "Retrieve all available opportunities",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_start",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_end",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter results by completed or not completed projects"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter projects that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "project",
                "event",
                "role"
              ]
            },
            "in": "query",
            "name": "opportunity_type",
            "description": "Filter by type Role-based, Project-based, or Event-based\n"
          }
        ]
      },
      "parameters": []
    },
    "/api/projects/{project_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get opportunities details",
        "tags": [
          "Project",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": 241,
                      "accounts": [
                        {
                          "id": 935,
                          "first_name": "",
                          "last_name": "",
                          "date_joined": "2020-02-12T17:28:29.200539+11:00",
                          "email": "mahi@seabinproject.com",
                          "profile_picture": null,
                          "preferred_name": "Mahi",
                          "secondary_email": null,
                          "mobile": "0406305083",
                          "linkedin": null,
                          "region_nation": null,
                          "region_nation_subdivision": null,
                          "area_code": null,
                          "last_login": "2020-04-01T16:12:09.655323+11:00",
                          "is_onboarded": true,
                          "attributes": [],
                          "goals": [],
                          "task_updatedate": null
                        },
                        {
                          "id": 948,
                          "first_name": "",
                          "last_name": "",
                          "date_joined": "2020-02-22T14:37:15.570601+11:00",
                          "email": "austindinh@me.com",
                          "profile_picture": null,
                          "preferred_name": "Austin Dinh",
                          "secondary_email": null,
                          "mobile": "0224385968",
                          "linkedin": null,
                          "region_nation": null,
                          "region_nation_subdivision": null,
                          "area_code": null,
                          "last_login": "2020-04-15T12:51:58.015660+10:00",
                          "is_onboarded": true,
                          "attributes": [],
                          "goals": [],
                          "task_updatedate": null
                        },
                        {
                          "id": 1017,
                          "first_name": "",
                          "last_name": "",
                          "date_joined": "2020-04-12T23:02:01.201633+10:00",
                          "email": "kankyb03@gmail.com",
                          "profile_picture": null,
                          "preferred_name": "kanky",
                          "secondary_email": null,
                          "mobile": "",
                          "linkedin": null,
                          "region_nation": null,
                          "region_nation_subdivision": null,
                          "area_code": null,
                          "last_login": "2020-04-12T23:02:06.744239+10:00",
                          "is_onboarded": true,
                          "attributes": [
                            58,
                            51,
                            54,
                            52,
                            30
                          ],
                          "goals": [],
                          "task_updatedate": "2020-03-11T00:55:14.193464Z"
                        }
                      ],
                      "communities": [
                        {
                          "id": 132,
                          "created_time": "2020-03-25T17:06:21.872279+11:00",
                          "modified_time": "2020-03-31T12:18:08.300321+11:00",
                          "is_active": true,
                          "title": "Seabin Project",
                          "logo": "https://comblob02.blob.core.windows.net/media-communiteer-com/f1cd12eb5bc9e878eef22d3edce88cc9_yhk35w3.jpg",
                          "website_url": "",
                          "is_invite_only": false,
                          "description": "<h2><strong style=\"color: rgb(0, 102, 204);\">CLEANING UP OUR OCEANS ONE MARINA AT A TIME</strong></h2><p><br></p><p>Main contact: Mahi Paquette</p>",
                          "intro_message": "",
                          "welcome_message": "<p>Welcome message</p>"
                        }
                      ],
                      "created_time": "2019-12-11T14:55:15.064263+11:00",
                      "modified_time": "2020-03-31T12:41:48.249250+11:00",
                      "is_active": true,
                      "welcome_message": "Welcome to this project!",
                      "slug": "1-create-a-project-plan-for-a-waste-on-water-geotagging-system",
                      "title": "1 Create a project plan for a waste-on-water geotagging system",
                      "description": "<p>We are launching an&nbsp;initiative to empower individuals to take photos of floating pollution and submit (via a geo-tagging system) their data to track the presence of waste on water which may justify the need for Seabins in the area.</p><p><br></p><p>We are looking for skilled volunteers to help create a project plan to design, build, test and launch this initiative.</p><p><br></p><p>Join this project to show your interest!</p><p><br></p>",
                      "date_start": "2019-12-10T16:33:38.800000+11:00",
                      "date_end": "2019-12-10T16:33:38.800000+11:00",
                      "date_closed": null,
                      "is_recurring": false,
                      "is_draft": false,
                      "is_closed": false,
                      "created_by": 400,
                      "modified_by": 637,
                      "agreement": 1,
                      "goals": [],
                      "organisations": [],
                      "programs": [
                        269
                      ],
                      "tasks": [
                        {
                          "id": 530,
                          "title": "Briefing and Scoping",
                          "description": "",
                          "is_closed": false,
                          "is_discontinued": false,
                          "created_time": "2019-12-11T14:55:16.199680+11:00",
                          "modified_time": "2020-02-19T11:43:53.962614+11:00",
                          "is_active": true,
                          "order": 0,
                          "skills": [
                            "Human resources",
                            "Management & Strategy"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-api-projects-project_id",
        "description": "Retrieve specific opportunity details",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/communities/{community_id}/projects": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community opportunities",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/projects/ProjectList.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 129,
                        "created_time": "2019-09-09T11:51:11.959200+10:00",
                        "modified_time": "2019-09-12T11:22:49.124735+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "project-title",
                        "title": "Project Title",
                        "description": "<p>This Project aims to... test</p>",
                        "date_start": "2019-09-09T11:45:41.599000+10:00",
                        "date_end": "2019-09-09T11:45:41.599000+10:00"
                      },
                      {
                        "id": 130,
                        "created_time": "2019-09-20T19:47:20.588069+10:00",
                        "modified_time": "2019-09-23T18:18:50.114086+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "test-rest-tr",
                        "title": "test rest tr",
                        "description": "<p>test test</p>",
                        "date_start": "2019-09-20T19:44:54.525000+10:00",
                        "date_end": "2019-09-20T19:44:54.525000+10:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-community_d-projects",
        "description": "Retrieve all projects within the specified community",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_start",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_end",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter results by completed or not completed projects"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter projects within the community that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get users list",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/accounts/UserList.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-04-06T18:26:28.741519+10:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": [],
                        "task_updatedate": "2020-04-09T01:05:07.416194Z"
                      },
                      {
                        "id": 334,
                        "first_name": "Admin",
                        "last_name": "Justine",
                        "date_joined": "2019-09-26T15:56:58+10:00",
                        "email": "adminjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Annotation_2020-02-26_132125.png",
                        "preferred_name": "Admin Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-04-03T11:22:17+11:00",
                        "is_onboarded": true,
                        "attributes": [
                          67
                        ],
                        "goals": [
                          1,
                          3,
                          2
                        ],
                        "task_updatedate": "2020-04-09T01:05:07.416194Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-users",
        "description": "Retrieve all users.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users base on matching name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "task_updatedate",
            "description": "Filter the users with the last task update"
          }
        ]
      }
    },
    "/api/users/{user_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user profile",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": 334,
                      "first_name": "Admin",
                      "last_name": "Justine",
                      "date_joined": "2019-09-26T15:56:58+10:00",
                      "email": "adminjustine@gmail.com",
                      "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Annotation_2020-02-26_132125_0LTS9TG.png",
                      "username": null,
                      "preferred_name": "Admin Justine",
                      "secondary_email": null,
                      "mobile": "0123456789",
                      "linkedin": "",
                      "region_nation": "Philippines",
                      "region_nation_subdivision": null,
                      "area_code": 2600,
                      "last_login": "2020-05-29T13:01:33.622263+10:00",
                      "term_acceptance_date": "2019-09-26T15:56:59.018846+10:00",
                      "attributes": [
                        63,
                        65
                      ],
                      "goals": [
                        3,
                        2
                      ],
                      "G2G_user_id": null,
                      "private_message_received": 0,
                      "private_message_sent": 0,
                      "updated_profile_details": 0,
                      "updated_profile_portrait": 0,
                      "updated_profile_skills": 0,
                      "updated_profile_goals": 0,
                      "stories_viewed": 0,
                      "announcements_viewed": 0,
                      "discussion_viewed": 0,
                      "events_viewed": 0,
                      "projects_viewed": 0,
                      "programs_viewed": 0,
                      "communities_visited": 0,
                      "communities_joined": 0,
                      "discussion_threads_started": 0,
                      "comments_posted_in_threads": 0,
                      "events_registered": 0,
                      "resources_added": 0,
                      "project_joined": 0,
                      "open_project_joined": 0,
                      "completed_project_joined": 0,
                      "comments_added_in_project": 0,
                      "project_tasks_created": 0,
                      "project_active_tasks_joined": 0,
                      "project_completed_tasks_joined": 0,
                      "project_files_uploaded": 0,
                      "feedback_provied": 0,
                      "projects": [
                        {
                          "id": 131,
                          "is_active": true,
                          "welcome_message": "Welcome to this project!",
                          "slug": "new-project",
                          "title": "New Project",
                          "description": "<p>New Project</p>",
                          "date_start": "2019-09-26T17:59:13.196000+10:00",
                          "date_end": "2019-09-26T17:59:13.196000+10:00",
                          "tasks": []
                        },
                        {
                          "id": 132,
                          "is_active": true,
                          "welcome_message": "Welcome to this project!",
                          "slug": "first-project",
                          "title": "first project",
                          "description": "<p>first project version 2</p>",
                          "date_start": "2019-09-26T18:19:21.643000+10:00",
                          "date_end": "2019-09-26T18:19:21.643000+10:00",
                          "tasks": [
                            {
                              "id": 131,
                              "created_time": "2020-04-08T19:29:27.956744+10:00",
                              "modified_time": "2020-05-17T17:40:49.384195+10:00",
                              "is_active": true,
                              "opportunity_id": 287,
                              "time_spent": 2.5
                            },
                            {
                              "id": 135,
                              "created_time": "2020-05-12T11:30:33.405561+10:00",
                              "modified_time": "2020-05-12T11:30:33.405688+10:00",
                              "is_active": false,
                              "opportunity_id": 312,
                              "time_spent": 0
                            },
                            {
                              "id": 136,
                              "created_time": "2020-05-12T11:48:26.420151+10:00",
                              "modified_time": "2020-05-12T11:48:26.420195+10:00",
                              "is_active": false,
                              "opportunity_id": 313,
                              "time_spent": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-users-user_id",
        "description": "Retrieve the information for specific user",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/communities/{community_id}/users": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community members",
        "tags": [
          "Community"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/accounts/UserList.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": [
                          1,
                          2,
                          3
                        ]
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-community_id-users",
        "description": "Retrieve all the users inside the community.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users by the specified name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "role",
            "description": "Filter the users by role e.g Admin or Supporter"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "datejoined",
                "lastlogin"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/projects/{project_id}/users": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get opportunity members",
        "tags": [
          "Project",
          "Users",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/accounts/UserList.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": []
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-projects-project_id-users",
        "description": "Retrieve the members of the opportunity.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users base on matching name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/projects/{project_id}/tasks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get opportunity tasks",
        "tags": [
          "Project",
          "Tasks",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/tasks/Tasks.v1.json"
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-api-projects-project_id-tasks",
        "description": "Retrieve list of tasks in the opportunity.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter completed/active tasks."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_discontinued",
            "description": "Filter hidden/visible tasks."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "Filter the tasks base on title."
          }
        ]
      }
    },
    "/api/users/{user_id}/tasks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user tasks",
        "tags": [
          "Users",
          "Tasks",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/tasks/AccountTasks.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "opportunity_id": 294,
                        "title": "Notification Update",
                        "description": "<p>Notification Update</p>",
                        "is_closed": false,
                        "is_discontinued": false,
                        "updated_time": "2019-11-07T23:27:17.038661Z",
                        "created_time": "2019-11-07T23:27:17.038621Z",
                        "hours_worked": 0,
                        "skills": []
                      },
                      {
                        "opportunity_id": 287,
                        "title": "Briefing and Scoping",
                        "description": "",
                        "is_closed": false,
                        "is_discontinued": false,
                        "updated_time": "2020-04-14T10:18:37.029820Z",
                        "created_time": "2019-09-26T08:19:37.470455Z",
                        "hours_worked": 5,
                        "skills": [
                          "Basic Admin",
                          "Data & Analytics"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-user-user_id-tasks",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/api-auth-token/": {
      "post": {
        "summary": "Retrieve Auth Token",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "token": "9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-auth-token",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "this field will be the email of the user"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example": {}
              }
            }
          },
          "description": "Provide post data with email and password"
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": ""
          }
        ]
      },
      "parameters": []
    },
    "/api/communities/affiliations/": {
      "get": {
        "summary": "Get Community Affiliations",
        "tags": [
          "Associations",
          "Community"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/associations/AssocCommunityCommunity.v1.json"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 425,
                        "is_active": true,
                        "affiliator_community_id": 96,
                        "affiliatee_community_id": 119,
                        "share_content_from_affiliator_to_affiliatee": true,
                        "show_content_from_affiliatee_to_affiliator": true,
                        "is_featured_on_affiliator_community": false,
                        "createddate": "2020-10-09T15:25:59.490658+11:00",
                        "updateddate": "2020-10-09T15:25:59.490658+11:00"
                      },
                      {
                        "id": 424,
                        "is_active": true,
                        "affiliator_community_id": 119,
                        "affiliatee_community_id": 94,
                        "share_content_from_affiliator_to_affiliatee": false,
                        "show_content_from_affiliatee_to_affiliator": false,
                        "is_featured_on_affiliator_community": false,
                        "createddate": "2020-10-11T15:25:59.490658+11:00",
                        "updateddate": "2020-10-11T15:25:59.490658+11:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-affiliations",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate",
                "affiliator_community_id",
                "affiliatee_community_id"
              ],
              "example": "filter=id"
            },
            "in": "query",
            "name": "filter",
            "description": "Filter results by the specified field"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "Show results greater than the value based on the selected filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Show results less than the value based on the selected filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "equals",
            "description": "Show results equals to the value based on the selected filter, will not work with `gt` or `lt`"
          }
        ],
        "description": "Get all community affiliations on the system"
      }
    },
    "/api/organisations/": {
      "get": {
        "summary": "Get Organisations",
        "tags": [
          "Organisations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/organisations/Organisation.v1.json"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-organisations",
        "description": "Get all organisations",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ]
            },
            "in": "query",
            "name": "filter",
            "description": "Filter results by the specified field"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "Show results greater than the value based on the selected filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Show results less than the value based on the selected filter"
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "parameters": []
    },
    "/api/organisations/{organisation_id}/": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "organisation_id",
          "in": "path",
          "required": true,
          "description": "ID of the organisation that needs to be retrieved"
        }
      ],
      "get": {
        "summary": "Get organisation details",
        "tags": [
          "Organisations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/organisations/Organisation.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-api-organisations-organisation_id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Get details of specified organisation"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "Use api token that will be generated"
      }
    },
    "schemas": {}
  }
}