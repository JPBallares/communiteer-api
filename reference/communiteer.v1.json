{
  "openapi": "3.0.0",
  "info": {
    "title": "communiteer",
    "version": "1.0",
    "description": "API Specification for third party integration"
  },
  "servers": [
    {
      "description": "",
      "url": "staging.communiteer.org"
    }
  ],
  "paths": {
    "/api/communities/": {
      "get": {
        "summary": "Get community list",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/communities/Community.v1.json"
                  }
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "../models/communities/Community.v1.json"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "description": "Retrieve all communities",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "Filter communties that matches the specified title"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter communities that vision mission contains the text specified"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "welcome_message",
            "description": "Filter communities that welcome messages contains the text specified"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_invite_only",
            "description": "Filter private or open communities"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter communities that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/communities/{community_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community details",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/communities/Community.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-api-communities-community_id",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "requestBody": {},
        "description": "Retrieve specific community details"
      }
    },
    "/api/projects/": {
      "get": {
        "summary": "Get project list",
        "tags": [
          "Project",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-api-projects",
        "description": "Retrieve all available projects",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_start",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_end",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter results by completed or not completed projects"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter projects that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      },
      "parameters": []
    },
    "/api/projects/{project_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get project details",
        "tags": [
          "Project",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-api-projects-project_id",
        "description": "Retrieve specific project details"
      }
    },
    "/api/communities/{community_id}/projects": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community projects",
        "tags": [
          "Community",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/projects/Project.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 129,
                        "created_time": "2019-09-09T11:51:11.959200+10:00",
                        "modified_time": "2019-09-12T11:22:49.124735+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "project-title",
                        "title": "Project Title",
                        "description": "<p>This Project aims to... test</p>",
                        "date_start": "2019-09-09T11:45:41.599000+10:00",
                        "date_end": "2019-09-09T11:45:41.599000+10:00"
                      },
                      {
                        "id": 130,
                        "created_time": "2019-09-20T19:47:20.588069+10:00",
                        "modified_time": "2019-09-23T18:18:50.114086+10:00",
                        "is_active": true,
                        "welcome_message": "Welcome to this project!",
                        "slug": "test-rest-tr",
                        "title": "test rest tr",
                        "description": "<p>test test</p>",
                        "date_start": "2019-09-20T19:44:54.525000+10:00",
                        "date_end": "2019-09-20T19:44:54.525000+10:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-community_d-projects",
        "description": "Retrieve all projects within the specified community",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_start",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date_end",
            "description": "Filter results by given date range"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter results by completed or not completed projects"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter projects within the community that matches the goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get users list",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": []
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-users",
        "description": "Retrieve all users.",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users base on matching name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/users/{user_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user profile",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-api-users-user_id",
        "description": "Retrieve the information for specific user",
        "security": [
          {
            "API Key - 1": []
          }
        ]
      }
    },
    "/api/communities/{community_id}/users": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "community_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get community members",
        "tags": [
          "Community"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": [
                          1,
                          2,
                          3
                        ]
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-communities-community_id-users",
        "description": "Retrieve all the users inside the community.",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users by the specified name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "role",
            "description": "Filter the users by role e.g Admin or Supporter"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "datejoined",
                "lastlogin"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/projects/{project_id}/users": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get project members",
        "tags": [
          "Project",
          "Users",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/accounts/UserProfile.v1.json"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 335,
                        "first_name": "Dev",
                        "last_name": "Justine",
                        "date_joined": "2019-10-02T12:32:12+10:00",
                        "email": "devjustine@gmail.com",
                        "profile_picture": "https://comblob02.blob.core.windows.net/media-communiteer-com/Artboard_10.5x_3rFmZxK.png",
                        "preferred_name": "Dev Justine",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2019-10-24T23:40:59+11:00",
                        "is_onboarded": false,
                        "attributes": [],
                        "goals": []
                      },
                      {
                        "id": 343,
                        "first_name": "Zenad",
                        "last_name": "Scarlet",
                        "date_joined": "2019-10-29T12:29:07+11:00",
                        "email": "zenad.scarlet@gmail.com",
                        "profile_picture": null,
                        "preferred_name": "Zenad",
                        "secondary_email": null,
                        "mobile": null,
                        "linkedin": "",
                        "region_nation": null,
                        "region_nation_subdivision": null,
                        "area_code": null,
                        "last_login": "2020-01-15T17:39:13.728925+11:00",
                        "is_onboarded": true,
                        "attributes": [],
                        "goals": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-projects-project_id-users",
        "description": "Retrieve the members of the project.",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter the users base on matching name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "skills",
            "description": "Filter the users with the specified skills"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "goals",
            "description": "Filter the users with the specified goals"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "createddate",
                "updateddate"
              ],
              "maxLength": 20
            },
            "in": "query",
            "name": "filter",
            "description": "Identify the range filter"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Start range for filter (only needed if using filter as param)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gt",
            "description": "End range for filter (only needed if using filter as param)"
          }
        ]
      }
    },
    "/api/projects/{project_id}/tasks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "project_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get project tasks",
        "tags": [
          "Project",
          "Tasks",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/communities/Tasks.v1.json"
                },
                "examples": {
                  "example-1": {}
                }
              }
            }
          }
        },
        "operationId": "get-api-projects-project_id-tasks",
        "description": "Retrieve list of tasks in the project.",
        "security": [
          {
            "API Key - 1": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_closed",
            "description": "Filter completed/active tasks."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_discontinued",
            "description": "Filter hidden/visible tasks."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "title",
            "description": "Filter the tasks base on title."
          }
        ]
      }
    },
    "/api/user/{user_id}/tasks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user tasks",
        "tags": [
          "Users",
          "Tasks",
          "End Points"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "$ref": "../models/communities/Tasks.v1.json"
                    },
                    "hours_worked": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-user-user_id-tasks"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "API Key - 1": {
        "name": "API Key",
        "type": "apiKey",
        "in": "header",
        "description": "Use api token that will be generated"
      }
    },
    "schemas": {}
  }
}